AWSTemplateFormatVersion: 2010-09-09
Description: |
  The template will create below resources
     - 3 public (one in each AZ)
     - 3 private subnets (one in each AZ)
     - 3 NAT Gateways (one in each AZ) and default routes for them in the private subnets
     - Internet Gateway
Parameters:
  VpcName:
    Type: String
    Description: Name of the VPC
    Default: my-devops-vpc
  
  VpcCidr:
    Type: String
    Default: 192.168.0.0/16
  
  PrivateSubnets:
    Type: CommaDelimitedList
    Description: List of CIDR blocks for private subnets
    Default: "192.168.1.0/24,192.168.2.0/24,192.168.3.0/24"

  PublicSubnets:
    Type: CommaDelimitedList
    Description: CIDR block for the public subnet
    Default: "192.168.4.0/24,192.168.5.0/24,192.168.6.0/24"

  AvailabilityZones:
    Type: CommaDelimitedList
    Description: List of availability zones for the subnets
    Default: "eu-central-1a,eu-central-1b,eu-central-1c"

Resources: 
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      Tags: 
        - Key: name
          Value: !Ref VpcName
  
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PrivateSubnets]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PrivateSubnets]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PrivateSubnets]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref PublicSubnets]
      AvailabilityZone: !Select [0, !Ref AvailabilityZones]

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref PublicSubnets]
      AvailabilityZone: !Select [1, !Ref AvailabilityZones]

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref PublicSubnets]
      AvailabilityZone: !Select [2, !Ref AvailabilityZones]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

#####################################################################
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetB

  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC

#####################################################################

  NATGatewayEIPA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGatewayA:
    Type: AWS::EC2::NatGateway
    DependsOn: NATGatewayEIPA
    Properties:
      AllocationId: !GetAtt NATGatewayEIPA.AllocationId
      SubnetId: !Ref PublicSubnetA

  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRouteA:
    Type: AWS::EC2::Route
    DependsOn: NATGatewayA
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayA

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA


#####################################################################

  NATGatewayEIPB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGatewayB:
    Type: AWS::EC2::NatGateway
    DependsOn: NATGatewayEIPB
    Properties:
      AllocationId: !GetAtt NATGatewayEIPB.AllocationId
      SubnetId: !Ref PublicSubnetB


  PrivateRouteTableB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRouteB:
    Type: AWS::EC2::Route
    DependsOn: NATGatewayB
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayB

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableB
      SubnetId: !Ref PrivateSubnetB


#####################################################################

  NATGatewayEIPC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGatewayC:
    Type: AWS::EC2::NatGateway
    DependsOn: NATGatewayEIPC
    Properties:
      AllocationId: !GetAtt NATGatewayEIPC.AllocationId
      SubnetId: !Ref PublicSubnetC


  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRouteC:
    Type: AWS::EC2::Route
    DependsOn: NATGatewayC
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayC


  PrivateSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      SubnetId: !Ref PrivateSubnetC


#####################################################################


Outputs:
  VPCoutput:
    Description: VPC name as output
    Value: !Ref VPC
    Export:
      Name: my-devops-cluster

  PublicSubnetAoutput:
    Description: PublicSubnetA-output
    Value: !Ref PublicSubnetA
    Export:
      Name: my-devops-cluster-publicsubneta

  PublicSubnetBoutput:
    Description: PublicSubnetB-output
    Value: !Ref PublicSubnetB
    Export:
      Name: my-devops-cluster-publicsubnetb

  PublicSubnetCoutput:
    Description: PublicSubnetC-output
    Value: !Ref PublicSubnetC
    Export:
      Name: my-devops-cluster-publicsubnetc

      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NATGatewayC


